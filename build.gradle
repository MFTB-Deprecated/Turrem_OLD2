configure(subprojects) 
{
	def n = it.path
	def useGuava = false;
	def useArgo = false;
	if (n == ':utils')
	{
		apply plugin: 'java'
		apply plugin: 'eclipse'
		useGuava = true;
		useArgo = true;
	}
	else if (n ==~ ':(app|mod|coremod):(client|common|server)')
	{		
		apply plugin: 'java'
		apply plugin: 'eclipse'
		
		def partname = n.substring(1,n.lastIndexOf(':'))
		def sidename = n.substring(n.lastIndexOf(':') + 1)
		
		def isApp = partname == 'app'
		def isMod = partname == 'mod'
		def isCoremod = partname == 'coremod'
		
		def isClient = sidename == 'client'
		def isCommon = sidename == 'common'
		def isServer = sidename == 'server'

		if (isApp)
		{
			useGuava = true;
			useArgo = true;
			
			dependencies 
			{
				compile project(":utils")
			}
		}

		eclipse 
		{
			project 
			{
				name = partname + "." + sidename
			}
		}
		
		if (!isCommon) 
		{
			dependencies 
			{
				compile project(":" + partname + ":common")
			}
		}
		
		if (isMod)
		{
			dependencies 
			{
				compile project(":coremod:" + sidename)
				compile project(":app:" + sidename)
				if (!isCommon) 
				{
					compile project(":coremod:common")
					compile project(":app:common")
				}
			}
		}
		
		if (isCoremod)
		{
			dependencies 
			{
				compile project(":app:" + sidename)
				if (!isCommon) 
				{
					compile project(":app:common")
				}
			}
		}
	}
	if (useGuava || useArgo)
	{
		repositories 
		{
			mavenCentral()
		}

	}
	if (useGuava)
	{
		dependencies 
		{
			compile group: 'com.google.guava', name: 'guava', version: '12.0'
		}
	}
	if (useArgo)
	{
		dependencies 
		{
			compile group: 'net.sourceforge.argo', name: 'argo', version: '3.12'
		}
	}
}